{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\hugom\\\\OneDrive\\\\Dokument\\\\GitHub\\\\KKcaptions2\\\\public\\\\components\\\\SongList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst globalAny = global;\nimport colors from \"./colors\";\n/* TextRow() A row of text\r\n    props {\r\n        text: String\r\n        state: {\r\n            ...props\r\n            setState\r\n        }\r\n    }\r\n*/\n\nfunction TextRow(props) {\n  var state = props.state;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    style: _objectSpread(_objectSpread({}, styles.textRow), props.id == state.state.selRow ? {\n      border: `3px solid rgb(240, 84, 79)`,\n      padding: styles.textRow.padding - 3\n    } : {}),\n    onClick: () => {\n      var textState = props.id == props.state.state.selRow ? {\n        selRow: \"-\",\n        text: \"-\"\n      } : {\n        selRow: props.id,\n        text: props.text\n      }; // If text is selected unselect else select\n\n      state.setState(_objectSpread(_objectSpread({}, state.state), textState)); // Set the text state\n\n      globalAny.socket.emit('setText', textState.text); // Emit text to server\n    },\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [props.text.split(\"\\n\").map((i, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.noSelect,\n          children: i\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 68\n        }, this);\n      }), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n/* TitleRow() A row for the title of a song\r\n    props {\r\n        title: String\r\n    }\r\n*/\n\n\nfunction Title(props) {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    style: styles.title,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n/* SongList() Create a ul within a div\r\n    props {\r\n        state: {\r\n            ...props\r\n            setState\r\n        }\r\n    }\r\n*/\n\n\nconst SongList = props => {\n  var state = props.state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.entries(state.state.songList).filter(x => x).map((song, songKey) => {\n      return [/*#__PURE__*/_jsxDEV(Title, {\n        title: song[0]\n      }, songKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), song[1].map((text, rowKey) => {\n        return /*#__PURE__*/_jsxDEV(TextRow, {\n          text: text,\n          state: state,\n          id: songKey + \":\" + rowKey\n        }, songKey + \":\" + rowKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 32\n        }, this);\n      })];\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\nvar styles = {\n  noSelect: {\n    \"WebkitTouchCallout\": \"none\",\n    \"WebkitUserSelect\": \"none\",\n    \"KhtmlUserSelect\": \"none\",\n    \"MozUserSelect\": \"none\",\n    \"MsUserSelect\": \"none\",\n    \"UserSelect\": \"none\"\n  },\n  textRow: {\n    listStyleType: \"none\",\n    margin: 10,\n    fontSize: \"15pt\",\n    cursor: \"pointer\",\n    padding: 10,\n    backgroundColor: colors.lavenderWeb,\n    borderRadius: 5\n  },\n  title: {\n    listStyleType: \"none\",\n    margin: 10,\n    fontSize: \"10pt\",\n    position: \"relative\",\n    cursor: \"default\",\n    padding: 10,\n    marginTop: 20,\n    backgroundColor: colors.sonicSilver\n  }\n};\nexport default SongList;","map":{"version":3,"sources":["C:/Users/hugom/OneDrive/Dokument/GitHub/KKcaptions2/public/components/SongList.js"],"names":["globalAny","global","colors","TextRow","props","state","styles","textRow","id","selRow","border","padding","textState","text","setState","socket","emit","split","map","i","key","noSelect","Title","title","SongList","Object","entries","songList","filter","x","song","songKey","rowKey","listStyleType","margin","fontSize","cursor","backgroundColor","lavenderWeb","borderRadius","position","marginTop","sonicSilver"],"mappings":"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","sourcesContent":["const globalAny = global;\r\n\r\nimport colors from \"./colors\";\r\n\r\n/* TextRow() A row of text\r\n    props {\r\n        text: String\r\n        state: {\r\n            ...props\r\n            setState\r\n        }\r\n    }\r\n*/\r\nfunction TextRow(props) {\r\n    var state = props.state;\r\n    return (\r\n        <li \r\n            style={{...styles.textRow, ...props.id==state.state.selRow ? {border: `3px solid rgb(240, 84, 79)`, padding: styles.textRow.padding-3}:{}}}\r\n            onClick={() => {\r\n                var textState = props.id==props.state.state.selRow?{selRow: \"-\", text: \"-\"}:{selRow: props.id, text: props.text} // If text is selected unselect else select\r\n                state.setState({...state.state, ...textState}); // Set the text state\r\n                globalAny.socket.emit('setText', textState.text) // Emit text to server\r\n            }}\r\n        >\r\n            <span>{props.text.split(\"\\n\").map((i, key) => { return <div style={styles.noSelect} key={key}>{i}</div>; })} </span> \r\n        </li>\r\n    )\r\n}\r\n\r\n/* TitleRow() A row for the title of a song\r\n    props {\r\n        title: String\r\n    }\r\n*/\r\nfunction Title(props) {\r\n    return (\r\n        <li style={styles.title}>\r\n            <span>{props.title}</span> \r\n        </li>\r\n    )\r\n}\r\n\r\n/* SongList() Create a ul within a div\r\n    props {\r\n        state: {\r\n            ...props\r\n            setState\r\n        }\r\n    }\r\n*/\r\nconst SongList = (props) => {\r\n    var state = props.state;\r\n    return (\r\n        <div>\r\n            {Object.entries(state.state.songList).filter(x => x).map((song, songKey) => {\r\n                return [\r\n                    <Title title={song[0]} key={songKey}></Title>,\r\n                    song[1].map((text, rowKey) => {\r\n                        return <TextRow text={text} state={state} id={songKey+\":\"+rowKey} key={songKey+\":\"+rowKey}></TextRow>\r\n                    })\r\n                ]\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\n  \r\nvar styles = {\r\n    noSelect: {\r\n        \"WebkitTouchCallout\": \"none\",\r\n        \"WebkitUserSelect\": \"none\",\r\n        \"KhtmlUserSelect\": \"none\",\r\n        \"MozUserSelect\": \"none\",\r\n        \"MsUserSelect\": \"none\",\r\n        \"UserSelect\": \"none\"\r\n    },\r\n    textRow: {\r\n        listStyleType: \"none\",\r\n        margin: 10,\r\n        fontSize: \"15pt\",\r\n        cursor: \"pointer\",\r\n        padding: 10,\r\n        backgroundColor: colors.lavenderWeb,\r\n        borderRadius: 5,\r\n    },\r\n    title: {\r\n        listStyleType: \"none\",\r\n        margin: 10,\r\n        fontSize: \"10pt\",\r\n        position: \"relative\",\r\n        cursor: \"default\",\r\n        padding: 10,\r\n        marginTop: 20,\r\n        backgroundColor: colors.sonicSilver,\r\n    }\r\n}\r\n\r\nexport default SongList"]},"metadata":{},"sourceType":"module"}