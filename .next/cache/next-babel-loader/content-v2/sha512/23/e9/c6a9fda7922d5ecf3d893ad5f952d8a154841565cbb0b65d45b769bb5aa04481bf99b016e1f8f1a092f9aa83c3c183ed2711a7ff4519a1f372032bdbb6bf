{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"C:/Users/hugom/OneDrive/Dokument/GitHub/KKcaptions2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hugom\\\\OneDrive\\\\Dokument\\\\GitHub\\\\KKcaptions2\\\\public\\\\components\\\\SongList.tsx\",\n    _this2 = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport colors from \"./colors.tsx\";\n/* TextRow() A row of text\r\n    props {\r\n        text: String\r\n        state: {\r\n            ...props\r\n            setState\r\n        }\r\n    }\r\n*/\n\nfunction TextRow(props) {\n  var _this = this;\n\n  var state = props.state;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    style: _objectSpread(_objectSpread({}, styles.textRow), props.text == state.state.text ? {\n      border: \"3px solid rgb(240, 84, 79)\",\n      padding: styles.textRow.padding - 3\n    } : {}),\n    onClick: function onClick() {\n      var textState = props.text == props.state.state.text ? {\n        text: \"-\"\n      } : {\n        text: props.text\n      }; // If text is selected unselect else select\n\n      state.setState(_objectSpread(_objectSpread({}, state.state), textState)); // Set the text state\n\n      global.socket.emit('setText', textState); // Emit text to server\n    },\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [props.text.split(\"\\n\").map(function (i, key) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.noSelect,\n          children: i\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 68\n        }, _this);\n      }), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n/* TitleRow() A row for the title of a song\r\n    props {\r\n        title: String\r\n    }\r\n*/\n\n\n_c = TextRow;\n\nfunction TitleRow(props) {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    style: styles.titleRow,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n/* SongList() Create a ul within a div\r\n    props {\r\n        state: {\r\n            ...props\r\n            setState\r\n        }\r\n    }\r\n*/\n\n\n_c2 = TitleRow;\n\nvar SongList = function SongList(props) {\n  var state = props.state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.entries(state.state.songList).filter(function (x) {\n      return x;\n    }).map(function (song, key) {\n      return [/*#__PURE__*/_jsxDEV(TitleRow, {\n        title: song[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, _this2), song[1].map(function (text, key) {\n        return /*#__PURE__*/_jsxDEV(TextRow, {\n          text: text,\n          state: state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 32\n        }, _this2);\n      })];\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, _this2);\n};\n\n_c3 = SongList;\nvar styles = {\n  noSelect: {\n    \"WebkitTouchCallout\": \"none\",\n    \"WebkitUserSelect\": \"none\",\n    \"KhtmlUserSelect\": \"none\",\n    \"MozUserSelect\": \"none\",\n    \"MsUserSelect\": \"none\",\n    \"UserSelect\": \"none\"\n  },\n  textRow: {\n    listStyleType: \"none\",\n    margin: 10,\n    fontSize: \"15pt\",\n    cursor: \"pointer\",\n    padding: 10,\n    backgroundColor: colors.lavenderWeb,\n    borderRadius: 5\n  },\n  titleRow: {\n    listStyleType: \"none\",\n    margin: 10,\n    fontSize: \"10pt\",\n    position: \"relative\",\n    cursor: \"default\",\n    padding: 10,\n    marginTop: 20,\n    backgroundColor: colors.sonicSilver\n  }\n};\nexport default SongList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TextRow\");\n$RefreshReg$(_c2, \"TitleRow\");\n$RefreshReg$(_c3, \"SongList\");","map":{"version":3,"sources":["C:/Users/hugom/OneDrive/Dokument/GitHub/KKcaptions2/public/components/SongList.tsx"],"names":["colors","TextRow","props","state","styles","textRow","text","border","padding","textState","setState","global","socket","emit","split","map","i","key","noSelect","TitleRow","titleRow","title","SongList","Object","entries","songList","filter","x","song","listStyleType","margin","fontSize","cursor","backgroundColor","lavenderWeb","borderRadius","position","marginTop","sonicSilver"],"mappings":";;;;;;;;;;AAAA,OAAOA,MAAP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,MAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;AACA,sBACI;AACI,IAAA,KAAK,kCAAMC,MAAM,CAACC,OAAb,GAAyBH,KAAK,CAACI,IAAN,IAAYH,KAAK,CAACA,KAAN,CAAYG,IAAxB,GAA+B;AAACC,MAAAA,MAAM,8BAAP;AAAuCC,MAAAA,OAAO,EAAEJ,MAAM,CAACC,OAAP,CAAeG,OAAf,GAAuB;AAAvE,KAA/B,GAAyG,EAAlI,CADT;AAEI,IAAA,OAAO,EAAE,mBAAM;AACX,UAAIC,SAAS,GAAGP,KAAK,CAACI,IAAN,IAAYJ,KAAK,CAACC,KAAN,CAAYA,KAAZ,CAAkBG,IAA9B,GAAmC;AAACA,QAAAA,IAAI,EAAE;AAAP,OAAnC,GAA+C;AAACA,QAAAA,IAAI,EAAEJ,KAAK,CAACI;AAAb,OAA/D,CADW,CACuE;;AAClFH,MAAAA,KAAK,CAACO,QAAN,iCAAmBP,KAAK,CAACA,KAAzB,GAAmCM,SAAnC,GAFW,CAEqC;;AAChDE,MAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB,SAAnB,EAA8BJ,SAA9B,EAHW,CAG8B;AAC5C,KANL;AAAA,2BAQI;AAAA,iBAAOP,KAAK,CAACI,IAAN,CAAWQ,KAAX,CAAiB,IAAjB,EAAuBC,GAAvB,CAA2B,UAACC,CAAD,EAAIC,GAAJ,EAAY;AAAE,4BAAO;AAAK,UAAA,KAAK,EAAEb,MAAM,CAACc,QAAnB;AAAA,oBAAwCF;AAAxC,WAAkCC,GAAlC;AAAA;AAAA;AAAA;AAAA,iBAAP;AAA0D,OAAnG,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;AAED;AACA;AACA;AACA;AACA;;;KApBShB,O;;AAqBT,SAASkB,QAAT,CAAkBjB,KAAlB,EAAyB;AACrB,sBACI;AAAI,IAAA,KAAK,EAAEE,MAAM,CAACgB,QAAlB;AAAA,2BACI;AAAA,gBAAOlB,KAAK,CAACmB;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;MAfSF,Q;;AAgBT,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACpB,KAAD,EAAW;AACxB,MAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;AAEA,sBACI;AAAA,cACKoB,MAAM,CAACC,OAAP,CAAerB,KAAK,CAACA,KAAN,CAAYsB,QAA3B,EAAqCC,MAArC,CAA4C,UAAAC,CAAC;AAAA,aAAIA,CAAJ;AAAA,KAA7C,EAAoDZ,GAApD,CAAwD,UAACa,IAAD,EAAcX,GAAd,EAAsB;AAC3E,aAAO,cACH,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEW,IAAI,CAAC,CAAD;AAArB;AAAA;AAAA;AAAA;AAAA,gBADG,EAEHA,IAAI,CAAC,CAAD,CAAJ,CAAQb,GAAR,CAAY,UAACT,IAAD,EAAOW,GAAP,EAAe;AACvB,4BAAO,QAAC,OAAD;AAAS,UAAA,IAAI,EAAEX,IAAf;AAAqB,UAAA,KAAK,EAAEH;AAA5B;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,OAFD,CAFG,CAAP;AAMH,KAPA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH,CAfD;;MAAMmB,Q;AAkBN,IAAIlB,MAAM,GAAG;AACTc,EAAAA,QAAQ,EAAE;AACN,0BAAsB,MADhB;AAEN,wBAAoB,MAFd;AAGN,uBAAmB,MAHb;AAIN,qBAAiB,MAJX;AAKN,oBAAgB,MALV;AAMN,kBAAc;AANR,GADD;AASTb,EAAAA,OAAO,EAAE;AACLwB,IAAAA,aAAa,EAAE,MADV;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,QAAQ,EAAE,MAHL;AAILC,IAAAA,MAAM,EAAE,SAJH;AAKLxB,IAAAA,OAAO,EAAE,EALJ;AAMLyB,IAAAA,eAAe,EAAEjC,MAAM,CAACkC,WANnB;AAOLC,IAAAA,YAAY,EAAE;AAPT,GATA;AAkBTf,EAAAA,QAAQ,EAAE;AACNS,IAAAA,aAAa,EAAE,MADT;AAENC,IAAAA,MAAM,EAAE,EAFF;AAGNC,IAAAA,QAAQ,EAAE,MAHJ;AAINK,IAAAA,QAAQ,EAAE,UAJJ;AAKNJ,IAAAA,MAAM,EAAE,SALF;AAMNxB,IAAAA,OAAO,EAAE,EANH;AAON6B,IAAAA,SAAS,EAAE,EAPL;AAQNJ,IAAAA,eAAe,EAAEjC,MAAM,CAACsC;AARlB;AAlBD,CAAb;AA8BA,eAAehB,QAAf","sourcesContent":["import colors from '/public/components/colors.tsx'\r\n\r\n/* TextRow() A row of text\r\n    props {\r\n        text: String\r\n        state: {\r\n            ...props\r\n            setState\r\n        }\r\n    }\r\n*/\r\nfunction TextRow(props) {\r\n    var state = props.state;\r\n    return (\r\n        <li \r\n            style={{...styles.textRow, ...props.text==state.state.text ? {border: `3px solid rgb(240, 84, 79)`, padding: styles.textRow.padding-3}:{}}}\r\n            onClick={() => {\r\n                var textState = props.text==props.state.state.text?{text: \"-\"}:{text: props.text} // If text is selected unselect else select\r\n                state.setState({...state.state, ...textState}); // Set the text state\r\n                global.socket.emit('setText', textState) // Emit text to server\r\n            }}\r\n        >\r\n            <span>{props.text.split(\"\\n\").map((i, key) => { return <div style={styles.noSelect} key={key}>{i}</div>; })} </span> \r\n        </li>\r\n    )\r\n}\r\n\r\n/* TitleRow() A row for the title of a song\r\n    props {\r\n        title: String\r\n    }\r\n*/\r\nfunction TitleRow(props) {\r\n    return (\r\n        <li style={styles.titleRow}>\r\n            <span>{props.title}</span> \r\n        </li>\r\n    )\r\n}\r\n\r\n/* SongList() Create a ul within a div\r\n    props {\r\n        state: {\r\n            ...props\r\n            setState\r\n        }\r\n    }\r\n*/\r\nconst SongList = (props) => {\r\n    var state = props.state;\r\n\r\n    return (\r\n        <div>\r\n            {Object.entries(state.state.songList).filter(x => x).map((song:Object, key) => {\r\n                return [\r\n                    <TitleRow title={song[0]} />,\r\n                    song[1].map((text, key) => {\r\n                        return <TextRow text={text} state={state} />\r\n                    })\r\n                ]\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\n  \r\nvar styles = {\r\n    noSelect: {\r\n        \"WebkitTouchCallout\": \"none\",\r\n        \"WebkitUserSelect\": \"none\",\r\n        \"KhtmlUserSelect\": \"none\",\r\n        \"MozUserSelect\": \"none\",\r\n        \"MsUserSelect\": \"none\",\r\n        \"UserSelect\": \"none\"\r\n    },\r\n    textRow: {\r\n        listStyleType: \"none\",\r\n        margin: 10,\r\n        fontSize: \"15pt\",\r\n        cursor: \"pointer\",\r\n        padding: 10,\r\n        backgroundColor: colors.lavenderWeb,\r\n        borderRadius: 5,\r\n    },\r\n    titleRow: {\r\n        listStyleType: \"none\",\r\n        margin: 10,\r\n        fontSize: \"10pt\",\r\n        position: \"relative\",\r\n        cursor: \"default\",\r\n        padding: 10,\r\n        marginTop: 20,\r\n        backgroundColor: colors.sonicSilver,\r\n    }\r\n}\r\n\r\nexport default SongList"]},"metadata":{},"sourceType":"module"}