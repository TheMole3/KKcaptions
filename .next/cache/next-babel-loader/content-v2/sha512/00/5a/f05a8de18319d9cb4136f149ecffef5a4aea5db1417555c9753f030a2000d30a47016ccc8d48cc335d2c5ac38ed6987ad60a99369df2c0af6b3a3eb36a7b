{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\hugom\\\\OneDrive\\\\Dokument\\\\GitHub\\\\KKcaptions2\\\\public\\\\components\\\\ReditSong.tsx\";\nimport React, { useState } from 'react';\nimport colors from \"./colors.tsx\";\nimport $ from 'jquery';\n\nconst EditSong = props => {\n  function applyHighlights(text) {\n    text = text.replace(/\\n$/g, '\\n\\n').replace(/^[*].*/gm, '<mark style=\"border-radius: 3px;color: transparent;background-color: #b1d5e5\">$&</mark>').replace(/^[-].*/gm, '<mark style=\"border-radius: 3px;color: transparent;background-color: #e5b1b1\">$&</mark>');\n    return text;\n  }\n\n  const {\n    0: text,\n    1: setText\n  } = useState(\"\");\n\n  function handleInput(event) {\n    setText(event.target.value);\n    var text = event.target.value;\n    var highlightedText = applyHighlights(text);\n    $('.hilights').html(highlightedText); //var arr = {}\n    //text.split(/^[*].*/gm).filter(x => x.replace(/\\s/g, \"\")).forEach((song,i) => {\n    //  arr[text.match(/^[*].*/gm)[i].replace(\"*\", \"\").trim()] = song.split(/^[-].*/gm).map(x => x.trim())\n    //});\n    //if (typeof window !== 'undefined') { // We are running on client\n    //  localStorage.setItem('song', JSON.stringify(props.state.state.songList))\n    //}\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.textarea,\n      className: \"backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hilights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      style: styles.textarea,\n      onInput: handleInput,\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\nvar styles = {\n  textarea: {\n    position: \"absolute\",\n    zIndex: 1,\n    overflow: \"auto\",\n    pointerEvents: \"none\",\n    backgroundColor: colors.lavenderWeb,\n    width: \"100%\",\n    height: \"90%\",\n    resize: \"none\",\n    padding: \"13px\",\n    font: \"10pt 'Open Sans'\",\n    letterSpacing: \"1px\"\n  }\n};\nexport default EditSong;","map":{"version":3,"sources":["C:/Users/hugom/OneDrive/Dokument/GitHub/KKcaptions2/public/components/ReditSong.tsx"],"names":["React","useState","colors","$","EditSong","props","applyHighlights","text","replace","setText","handleInput","event","target","value","highlightedText","html","styles","textarea","position","zIndex","overflow","pointerEvents","backgroundColor","lavenderWeb","width","height","resize","padding","font","letterSpacing"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,WAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC3BA,IAAAA,IAAI,GAAGA,IAAI,CACNC,OADE,CACM,MADN,EACc,MADd,EAEFA,OAFE,CAEM,UAFN,EAEkB,yFAFlB,EAGFA,OAHE,CAGM,UAHN,EAGkB,yFAHlB,CAAP;AAIA,WAAOD,IAAP;AACH;;AAED,QAAM;AAAA,OAACA,IAAD;AAAA,OAAOE;AAAP,MAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASS,WAAT,CAAqBC,KAArB,EAA4B;AACxBF,IAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACA,QAAIN,IAAI,GAAGI,KAAK,CAACC,MAAN,CAAaC,KAAxB;AACA,QAAIC,eAAe,GAAGR,eAAe,CAACC,IAAD,CAArC;AACAJ,IAAAA,CAAC,CAAC,WAAD,CAAD,CAAeY,IAAf,CAAoBD,eAApB,EAJwB,CAMxB;AACA;AACA;AACA;AAGA;AACA;AACA;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAK,MAAA,KAAK,EAAEE,MAAM,CAACC,QAAnB;AAA6B,MAAA,SAAS,EAAC,UAAvC;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AACI,MAAA,KAAK,EAAED,MAAM,CAACC,QADlB;AAEI,MAAA,OAAO,EAAEP,WAFb;AAGI,MAAA,KAAK,EAAEH;AAHX;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAxCD;;AA0CA,IAAIS,MAAM,GAAG;AACTC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,EAAE,UADJ;AAENC,IAAAA,MAAM,EAAE,CAFF;AAGNC,IAAAA,QAAQ,EAAE,MAHJ;AAINC,IAAAA,aAAa,EAAE,MAJT;AAKNC,IAAAA,eAAe,EAAEpB,MAAM,CAACqB,WALlB;AAMNC,IAAAA,KAAK,EAAE,MAND;AAONC,IAAAA,MAAM,EAAE,KAPF;AAQNC,IAAAA,MAAM,EAAE,MARF;AASNC,IAAAA,OAAO,EAAE,MATH;AAUNC,IAAAA,IAAI,EAAE,kBAVA;AAWNC,IAAAA,aAAa,EAAE;AAXT;AADD,CAAb;AAgBA,eAAezB,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport colors from '/public/components/colors.tsx'\r\nimport $ from 'jquery'\r\n\r\nconst EditSong = (props) => {\r\n    function applyHighlights(text) {\r\n        text = text\r\n            .replace(/\\n$/g, '\\n\\n')\r\n            .replace(/^[*].*/gm, '<mark style=\"border-radius: 3px;color: transparent;background-color: #b1d5e5\">$&</mark>')\r\n            .replace(/^[-].*/gm, '<mark style=\"border-radius: 3px;color: transparent;background-color: #e5b1b1\">$&</mark>');\r\n        return text;\r\n    }\r\n\r\n    const [text, setText] = useState(\"\")\r\n\r\n    function handleInput(event) {\r\n        setText(event.target.value);\r\n        var text = event.target.value;\r\n        var highlightedText = applyHighlights(text);\r\n        $('.hilights').html(highlightedText);\r\n  \r\n        //var arr = {}\r\n        //text.split(/^[*].*/gm).filter(x => x.replace(/\\s/g, \"\")).forEach((song,i) => {\r\n        //  arr[text.match(/^[*].*/gm)[i].replace(\"*\", \"\").trim()] = song.split(/^[-].*/gm).map(x => x.trim())\r\n        //});\r\n        \r\n\r\n        //if (typeof window !== 'undefined') { // We are running on client\r\n        //  localStorage.setItem('song', JSON.stringify(props.state.state.songList))\r\n        //}\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div style={styles.textarea} className=\"backdrop\">\r\n                <div className=\"hilights\"></div>\r\n            </div>\r\n            <textarea\r\n                style={styles.textarea}\r\n                onInput={handleInput}\r\n                value={text}\r\n            ></textarea>\r\n        </div>\r\n    )\r\n}\r\n\r\nvar styles = {\r\n    textarea: {\r\n        position: \"absolute\",\r\n        zIndex: 1,\r\n        overflow: \"auto\",\r\n        pointerEvents: \"none\",\r\n        backgroundColor: colors.lavenderWeb,\r\n        width: \"100%\",\r\n        height: \"90%\",\r\n        resize: \"none\",\r\n        padding: \"13px\",\r\n        font: \"10pt 'Open Sans'\",\r\n        letterSpacing: \"1px\",\r\n    }\r\n}\r\n\r\nexport default EditSong;"]},"metadata":{},"sourceType":"module"}