{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"C:/Users/hugom/OneDrive/Dokument/GitHub/KKcaptions2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hugom\\\\OneDrive\\\\Dokument\\\\GitHub\\\\KKcaptions2\\\\public\\\\components\\\\ReditSong.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport colors from \"./colors.tsx\";\nimport $ from 'jquery';\n\nvar EditSong = function EditSong(props) {\n  _s();\n\n  function applyHighlights(text) {\n    text = text.replace(/\\n$/g, '\\n\\n').replace(/^(?![\\n*]).*/gm, '<mark style=\"color: transparent; background-color: #e5b1b1\"><span style=\"width:2%; display:inline-block\"></span></mark>').replace(/^[*].*/gm, '<span style=\"width:3%; display:inline-block\"></span><mark style=\"border-radius: 3px;color: transparent;background-color: #b1d5e5\">$&</mark>');\n    return text;\n  }\n\n  var string = \"\";\n  var songList = props.state.state.songList;\n  Object.keys(songList).forEach(function (song, songIndex) {\n    string += \"* \".concat(song, \"\\n\");\n    songList[song].forEach(function (text, i) {\n      if (songList[song].length - 1 == i && Object.keys(songList).length - 1 == songIndex) return string += text + \"\";\n      string += text + \"\\n\\n\";\n    });\n  });\n\n  var _useState = useState(string),\n      text = _useState[0],\n      setText = _useState[1];\n\n  useEffect(function () {\n    $('.hilights').html(applyHighlights(text));\n  });\n\n  function handleInput(event) {\n    setText(event.target.value);\n    var text = event.target.value;\n    var highlightedText = applyHighlights(text);\n    $('.hilights').html(highlightedText);\n    var arr = {};\n    text.split(/^[*].*/gm).filter(function (x) {\n      return x.replace(/\\s/g, \"\");\n    }).forEach(function (song, i) {\n      arr[text.match(/^[*].*/gm)[i].replace(\"*\", \"\").trim()] = song.split(/^[\\n\\n]/gm).map(function (x) {\n        return x.trim();\n      }).filter(function (x) {\n        return x;\n      });\n    });\n    props.state.setState(_objectSpread(_objectSpread({}, props.state), {}, {\n      songList: arr\n    }));\n\n    if (true) {\n      // We are running on client\n      localStorage.setItem('song', JSON.stringify(arr));\n    }\n  }\n\n  function handleScroll() {\n    var scrollTop = $('.textarea').scrollTop();\n    $('.backdrop').scrollTop(scrollTop);\n    var scrollLeft = $('.textarea').scrollLeft();\n    $('.backdrop').scrollLeft(scrollLeft);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: _objectSpread(_objectSpread({}, styles.textarea), {}, {\n        pointerEvents: \"none\",\n        backgroundColor: colors.lavenderWeb,\n        color: \"transparent\",\n        left: 0,\n        width: \"100%\"\n      }),\n      className: \"backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          whiteSpace: \"pre-wrap\",\n          wordWrap: \"break-word\"\n        },\n        className: \"hilights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"textarea\",\n      style: styles.textarea,\n      onInput: handleInput,\n      onScroll: handleScroll,\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(EditSong, \"cLRv+IjWWNPO0V/Hhl+orzXdf+0=\");\n\n_c = EditSong;\nvar styles = {\n  textarea: {\n    position: \"absolute\",\n    zIndex: 1,\n    backgroundColor: \"transparent\",\n    width: \"97%\",\n    height: \"94%\",\n    resize: \"none\",\n    font: \"10pt 'Open Sans'\",\n    letterSpacing: \"1px\",\n    padding: 0,\n    left: \"3%\",\n    border: \"none\",\n    outline: \"none\"\n  }\n};\nexport default EditSong;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditSong\");","map":{"version":3,"sources":["C:/Users/hugom/OneDrive/Dokument/GitHub/KKcaptions2/public/components/ReditSong.tsx"],"names":["React","useEffect","useState","colors","$","EditSong","props","applyHighlights","text","replace","string","songList","state","Object","keys","forEach","song","songIndex","i","length","setText","html","handleInput","event","target","value","highlightedText","arr","split","filter","x","match","trim","map","setState","localStorage","setItem","JSON","stringify","handleScroll","scrollTop","scrollLeft","styles","textarea","pointerEvents","backgroundColor","lavenderWeb","color","left","width","whiteSpace","wordWrap","position","zIndex","height","resize","font","letterSpacing","padding","border","outline"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport colors from '/public/components/colors.tsx'\r\nimport $ from 'jquery'\r\n\r\nconst EditSong = (props) => {\r\n    function applyHighlights(text) {\r\n        text = text\r\n            .replace(/\\n$/g, '\\n\\n')\r\n            .replace(/^(?![\\n*]).*/gm, '<mark style=\"color: transparent; background-color: #e5b1b1\"><span style=\"width:2%; display:inline-block\"></span></mark>')\r\n            .replace(/^[*].*/gm, '<span style=\"width:3%; display:inline-block\"></span><mark style=\"border-radius: 3px;color: transparent;background-color: #b1d5e5\">$&</mark>');\r\n        return text;\r\n    }\r\n\r\n    var string = ``\r\n    var songList = props.state.state.songList;\r\n    Object.keys(songList).forEach((song, songIndex) => {\r\n      string+=`* ${song}\\n`;\r\n      songList[song].forEach((text, i) => {\r\n        if(songList[song].length-1 == i && Object.keys(songList).length-1 == songIndex) return string+=text+\"\"\r\n        string+=text+\"\\n\\n\"\r\n      })\r\n    })\r\n\r\n    const [text, setText] = useState(string)\r\n\r\n    useEffect(() => {\r\n        $('.hilights').html(applyHighlights(text))\r\n    })\r\n\r\n    function handleInput(event) {\r\n        setText(event.target.value);\r\n        var text = event.target.value;\r\n        var highlightedText = applyHighlights(text);\r\n        $('.hilights').html(highlightedText);\r\n  \r\n        var arr = {}\r\n        text.split(/^[*].*/gm).filter(x => x.replace(/\\s/g, \"\")).forEach((song,i) => {\r\n          arr[text.match(/^[*].*/gm)[i].replace(\"*\", \"\").trim()] = song.split(/^[\\n\\n]/gm).map(x => x.trim()).filter(x => x)\r\n        });\r\n        props.state.setState({...props.state, songList: arr})\r\n        \r\n\r\n        if (typeof window !== 'undefined') { // We are running on client\r\n          localStorage.setItem('song', JSON.stringify(arr))\r\n        }\r\n    }\r\n\r\n    function handleScroll() {\r\n        var scrollTop = $('.textarea').scrollTop();\r\n        $('.backdrop').scrollTop(scrollTop);\r\n        \r\n        var scrollLeft = $('.textarea').scrollLeft();\r\n        $('.backdrop').scrollLeft(scrollLeft);  \r\n      }    \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div style={{...styles.textarea,\r\n                pointerEvents: \"none\",\r\n                backgroundColor: colors.lavenderWeb,\r\n                color: \"transparent\",\r\n                left: 0,\r\n                width: \"100%\"\r\n            }} className=\"backdrop\">\r\n                <div style={{\r\n                    whiteSpace: \"pre-wrap\",\r\n                    wordWrap: \"break-word\",\r\n                }} className=\"hilights\"></div>\r\n            </div>\r\n            <textarea\r\n                className=\"textarea\"\r\n                style={styles.textarea}\r\n                onInput={handleInput}\r\n                onScroll={handleScroll}\r\n                value={text}\r\n            ></textarea>\r\n        </div>\r\n    )\r\n}\r\n\r\nvar styles = {\r\n    textarea: {\r\n        position: \"absolute\",\r\n        zIndex: 1,\r\n        backgroundColor: \"transparent\",\r\n        width: \"97%\",\r\n        height: \"94%\",\r\n        resize: \"none\",\r\n        font: \"10pt 'Open Sans'\",\r\n        letterSpacing: \"1px\",\r\n        padding: 0,\r\n        left: \"3%\",\r\n        border: \"none\",\r\n        outline: \"none\"\r\n    }\r\n}\r\n\r\nexport default EditSong;"]},"metadata":{},"sourceType":"module"}