{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\hugom\\\\OneDrive\\\\Dokument\\\\GitHub\\\\KKcaptions2\\\\public\\\\components\\\\ReditSong.tsx\";\nimport React, { useState } from 'react';\n\nconst EditSong = props => {\n  function applyHighlights(text) {\n    text = text.replace(/\\n$/g, '\\n\\n').replace(/^[*].*/gm, '<mark style=\"border-radius: 3px;color: transparent;background-color: #b1d5e5\">$&</mark>').replace(/^[-].*/gm, '<mark style=\"border-radius: 3px;color: transparent;background-color: #e5b1b1\">$&</mark>');\n    return text;\n  }\n\n  const {\n    0: text,\n    1: setText\n  } = useState(\"\");\n\n  function handleInput(event) {\n    setText(event.target.value);\n    var text = event.target.value;\n    var highlightedText = applyHighlights(text);\n    $('.hilights').html(highlightedText);\n    var arr = {};\n    text.split(/^[*].*/gm).filter(x => x.replace(/\\s/g, \"\")).forEach((song, i) => {\n      arr[text.match(/^[*].*/gm)[i].replace(\"*\", \"\").trim()] = song.split(/^[-].*/gm).map(x => x.trim());\n    });\n\n    if (false) {\n      // We are running on client\n      localStorage.setItem('song', JSON.stringify(props.state.state.songList));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hilights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onInput: handleInput,\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\nvar styles = {};\nexport default EditSong;","map":{"version":3,"sources":["C:/Users/hugom/OneDrive/Dokument/GitHub/KKcaptions2/public/components/ReditSong.tsx"],"names":["React","useState","EditSong","props","applyHighlights","text","replace","setText","handleInput","event","target","value","highlightedText","$","html","arr","split","filter","x","forEach","song","i","match","trim","map","localStorage","setItem","JSON","stringify","state","songList","styles"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,WAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC3BA,IAAAA,IAAI,GAAGA,IAAI,CACNC,OADE,CACM,MADN,EACc,MADd,EAEFA,OAFE,CAEM,UAFN,EAEkB,yFAFlB,EAGFA,OAHE,CAGM,UAHN,EAGkB,yFAHlB,CAAP;AAIA,WAAOD,IAAP;AACH;;AAED,QAAM;AAAA,OAACA,IAAD;AAAA,OAAOE;AAAP,MAAkBN,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASO,WAAT,CAAqBC,KAArB,EAA4B;AACxBF,IAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACA,QAAIN,IAAI,GAAGI,KAAK,CAACC,MAAN,CAAaC,KAAxB;AACA,QAAIC,eAAe,GAAGR,eAAe,CAACC,IAAD,CAArC;AACAQ,IAAAA,CAAC,CAAC,WAAD,CAAD,CAAeC,IAAf,CAAoBF,eAApB;AAEA,QAAIG,GAAG,GAAG,EAAV;AACAV,IAAAA,IAAI,CAACW,KAAL,CAAW,UAAX,EAAuBC,MAAvB,CAA8BC,CAAC,IAAIA,CAAC,CAACZ,OAAF,CAAU,KAAV,EAAiB,EAAjB,CAAnC,EAAyDa,OAAzD,CAAiE,CAACC,IAAD,EAAMC,CAAN,KAAY;AAC3EN,MAAAA,GAAG,CAACV,IAAI,CAACiB,KAAL,CAAW,UAAX,EAAuBD,CAAvB,EAA0Bf,OAA1B,CAAkC,GAAlC,EAAuC,EAAvC,EAA2CiB,IAA3C,EAAD,CAAH,GAAyDH,IAAI,CAACJ,KAAL,CAAW,UAAX,EAAuBQ,GAAvB,CAA2BN,CAAC,IAAIA,CAAC,CAACK,IAAF,EAAhC,CAAzD;AACD,KAFD;;AAIA,eAAmC;AAAE;AACnCE,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAezB,KAAK,CAAC0B,KAAN,CAAYA,KAAZ,CAAkBC,QAAjC,CAA7B;AACD;AACJ;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AACI,MAAA,OAAO,EAAEtB,WADb;AAEI,MAAA,KAAK,EAAEH;AAFX;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAtCD;;AAwCA,IAAI0B,MAAM,GAAG,EAAb;AAIA,eAAe7B,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport colors from '/public/components/colors.tsx'\r\n\r\nconst EditSong = (props) => {\r\n    function applyHighlights(text) {\r\n        text = text\r\n            .replace(/\\n$/g, '\\n\\n')\r\n            .replace(/^[*].*/gm, '<mark style=\"border-radius: 3px;color: transparent;background-color: #b1d5e5\">$&</mark>')\r\n            .replace(/^[-].*/gm, '<mark style=\"border-radius: 3px;color: transparent;background-color: #e5b1b1\">$&</mark>');\r\n        return text;\r\n    }\r\n\r\n    const [text, setText] = useState(\"\")\r\n\r\n    function handleInput(event) {\r\n        setText(event.target.value);\r\n        var text = event.target.value;\r\n        var highlightedText = applyHighlights(text);\r\n        $('.hilights').html(highlightedText);\r\n  \r\n        var arr = {}\r\n        text.split(/^[*].*/gm).filter(x => x.replace(/\\s/g, \"\")).forEach((song,i) => {\r\n          arr[text.match(/^[*].*/gm)[i].replace(\"*\", \"\").trim()] = song.split(/^[-].*/gm).map(x => x.trim())\r\n        });\r\n\r\n        if (typeof window !== 'undefined') { // We are running on client\r\n          localStorage.setItem('song', JSON.stringify(props.state.state.songList))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"backdrop\">\r\n                <div className=\"hilights\"></div>\r\n            </div>\r\n            <textarea\r\n                onInput={handleInput}\r\n                value={text}\r\n            ></textarea>\r\n        </div>\r\n    )\r\n}\r\n\r\nvar styles = {\r\n\r\n}\r\n\r\nexport default EditSong;"]},"metadata":{},"sourceType":"module"}