{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"C:/Users/hugom/OneDrive/Dokument/GitHub/KKcaptions2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hugom\\\\OneDrive\\\\Dokument\\\\GitHub\\\\KKcaptions2\\\\public\\\\components\\\\ReditSong.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\n\nvar EditSong = function EditSong(props) {\n  function applyHighlights(text) {\n    text = text.replace(/\\n$/g, '\\n\\n').replace(/^[*].*/gm, '<mark style=\"border-radius: 3px;color: transparent;background-color: #b1d5e5\">$&</mark>').replace(/^[-].*/gm, '<mark style=\"border-radius: 3px;color: transparent;background-color: #e5b1b1\">$&</mark>');\n    return text;\n  }\n\n  function handleInput(event) {\n    props.state.setState(_objectSpread(_objectSpread({}, props.state.state), {}, _defineProperty({}, event.target.name, event.target.value)));\n    var text = event.target.value;\n    var highlightedText = applyHighlights(text);\n    $('.hilights').html(highlightedText);\n    var arr = {};\n    text.split(/^[*].*/gm).filter(function (x) {\n      return x.replace(/\\s/g, \"\");\n    }).forEach(function (song, i) {\n      arr[text.match(/^[*].*/gm)[i].replace(\"*\", \"\").trim()] = song.split(/^[-].*/gm).map(function (x) {\n        return x.trim();\n      });\n    });\n\n    if (true) {\n      // We are running on client\n      localStorage.setItem('song', JSON.stringify(props.state.state.songList));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hilights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"textarea\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = EditSong;\nvar styles = {};\nexport default EditSong;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditSong\");","map":{"version":3,"sources":["C:/Users/hugom/OneDrive/Dokument/GitHub/KKcaptions2/public/components/ReditSong.tsx"],"names":["React","EditSong","props","applyHighlights","text","replace","handleInput","event","state","setState","target","name","value","highlightedText","$","html","arr","split","filter","x","forEach","song","i","match","trim","map","localStorage","setItem","JSON","stringify","songList","styles"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AACxB,WAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC3BA,IAAAA,IAAI,GAAGA,IAAI,CACNC,OADE,CACM,MADN,EACc,MADd,EAEFA,OAFE,CAEM,UAFN,EAEkB,yFAFlB,EAGFA,OAHE,CAGM,UAHN,EAGkB,yFAHlB,CAAP;AAIA,WAAOD,IAAP;AACH;;AAED,WAASE,WAAT,CAAqBC,KAArB,EAA4B;AACxBL,IAAAA,KAAK,CAACM,KAAN,CAAYC,QAAZ,iCAA0BP,KAAK,CAACM,KAAN,CAAYA,KAAtC,2BAA8CD,KAAK,CAACG,MAAN,CAAaC,IAA3D,EAAkEJ,KAAK,CAACG,MAAN,CAAaE,KAA/E;AACA,QAAIR,IAAI,GAAGG,KAAK,CAACG,MAAN,CAAaE,KAAxB;AACA,QAAIC,eAAe,GAAGV,eAAe,CAACC,IAAD,CAArC;AACAU,IAAAA,CAAC,CAAC,WAAD,CAAD,CAAeC,IAAf,CAAoBF,eAApB;AAEA,QAAIG,GAAG,GAAG,EAAV;AACAZ,IAAAA,IAAI,CAACa,KAAL,CAAW,UAAX,EAAuBC,MAAvB,CAA8B,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACd,OAAF,CAAU,KAAV,EAAiB,EAAjB,CAAJ;AAAA,KAA/B,EAAyDe,OAAzD,CAAiE,UAACC,IAAD,EAAMC,CAAN,EAAY;AAC3EN,MAAAA,GAAG,CAACZ,IAAI,CAACmB,KAAL,CAAW,UAAX,EAAuBD,CAAvB,EAA0BjB,OAA1B,CAAkC,GAAlC,EAAuC,EAAvC,EAA2CmB,IAA3C,EAAD,CAAH,GAAyDH,IAAI,CAACJ,KAAL,CAAW,UAAX,EAAuBQ,GAAvB,CAA2B,UAAAN,CAAC;AAAA,eAAIA,CAAC,CAACK,IAAF,EAAJ;AAAA,OAA5B,CAAzD;AACD,KAFD;;AAIA,cAAmC;AAAE;AACnCE,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAe3B,KAAK,CAACM,KAAN,CAAYA,KAAZ,CAAkBsB,QAAjC,CAA7B;AACD;AACJ;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aADJ,eAII;AAAA;AAAA;AAAA;AAAA,aAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CAjCD;;KAAM7B,Q;AAmCN,IAAI8B,MAAM,GAAG,EAAb;AAIA,eAAe9B,QAAf","sourcesContent":["import React from 'react';\r\nimport colors from '/public/components/colors.tsx'\r\n\r\nconst EditSong = (props) => {\r\n    function applyHighlights(text) {\r\n        text = text\r\n            .replace(/\\n$/g, '\\n\\n')\r\n            .replace(/^[*].*/gm, '<mark style=\"border-radius: 3px;color: transparent;background-color: #b1d5e5\">$&</mark>')\r\n            .replace(/^[-].*/gm, '<mark style=\"border-radius: 3px;color: transparent;background-color: #e5b1b1\">$&</mark>');\r\n        return text;\r\n    }\r\n\r\n    function handleInput(event) {\r\n        props.state.setState({ ...props.state.state, [event.target.name]: event.target.value });\r\n        var text = event.target.value;\r\n        var highlightedText = applyHighlights(text);\r\n        $('.hilights').html(highlightedText);\r\n  \r\n        var arr = {}\r\n        text.split(/^[*].*/gm).filter(x => x.replace(/\\s/g, \"\")).forEach((song,i) => {\r\n          arr[text.match(/^[*].*/gm)[i].replace(\"*\", \"\").trim()] = song.split(/^[-].*/gm).map(x => x.trim())\r\n        });\r\n\r\n        if (typeof window !== 'undefined') { // We are running on client\r\n          localStorage.setItem('song', JSON.stringify(props.state.state.songList))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"backdrop\">\r\n                <div className=\"hilights\"></div>\r\n            </div>\r\n            <textarea></textarea>\r\n        </div>\r\n    )\r\n}\r\n\r\nvar styles = {\r\n\r\n}\r\n\r\nexport default EditSong;"]},"metadata":{},"sourceType":"module"}