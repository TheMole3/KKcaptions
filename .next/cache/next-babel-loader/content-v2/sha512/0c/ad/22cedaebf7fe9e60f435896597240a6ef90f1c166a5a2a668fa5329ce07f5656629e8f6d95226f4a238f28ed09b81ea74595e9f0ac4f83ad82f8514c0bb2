{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\hugom\\\\OneDrive\\\\Dokument\\\\GitHub\\\\KKcaptions2\\\\public\\\\components\\\\TokenFooter.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, TextField } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useToasts } from 'react-toast-notifications';\nimport colors from \"./colors\";\n\nvar TokenFooter = props => {\n  const {\n    addToast\n  } = useToasts();\n\n  const handleTokenSubmit = e => {\n    addToast(\"Zoom token uppdaterad\", {\n      appearance: 'success',\n      autoDismiss: true\n    });\n    console.log(props.state.state.token); //global.socket.emit('setToken', )\n  };\n\n  const handleChange = event => {\n    props.state.setState(_objectSpread(_objectSpread({}, props.state.state), {}, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.footer,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"filled-full-width\",\n      label: \"Zoom CC api token\",\n      style: styles.textField,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      name: \"token\",\n      variant: \"filled\",\n      onKeyPress: e => {\n        if (e.code === 'Enter') handleTokenSubmit(e);\n      },\n      onChange: handleChange,\n      value: props.state.state.token\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: styles.button,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleTokenSubmit,\n      children: \"Uppdatera\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\nvar styles = {\n  footer: {\n    position: \"fixed\",\n    bottom: 0,\n    width: \"100%\",\n    backgroundColor: colors.tartOrange,\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  button: {\n    margin: 10\n  },\n  textField: {\n    width: \"80%\",\n    margin: 8\n  }\n};\nexport default TokenFooter;","map":{"version":3,"sources":["C:/Users/hugom/OneDrive/Dokument/GitHub/KKcaptions2/public/components/TokenFooter.tsx"],"names":["Button","TextField","React","useToasts","colors","TokenFooter","props","addToast","handleTokenSubmit","e","appearance","autoDismiss","console","log","state","token","handleChange","event","setState","target","name","value","styles","footer","textField","shrink","code","button","position","bottom","width","backgroundColor","tartOrange","display","justifyContent","margin"],"mappings":";;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,mBAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,2BAA1B;AAEA,OAAOC,MAAP;;AAEA,IAAIC,WAAW,GAAIC,KAAD,IAAW;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAeJ,SAAS,EAA9B;;AAEA,QAAMK,iBAAiB,GAAIC,CAAD,IAAO;AAC7BF,IAAAA,QAAQ,CAAC,uBAAD,EAA0B;AAC9BG,MAAAA,UAAU,EAAE,SADkB;AAE9BC,MAAAA,WAAW,EAAE;AAFiB,KAA1B,CAAR;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACQ,KAAN,CAAYA,KAAZ,CAAkBC,KAA9B,EAL6B,CAM7B;AACH,GAPD;;AASA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BX,IAAAA,KAAK,CAACQ,KAAN,CAAYI,QAAZ,iCAA0BZ,KAAK,CAACQ,KAAN,CAAYA,KAAtC;AAA6C,OAACG,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAA/E;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,KAAK,EAAEC,MAAM,CAACC,MAAnB;AAAA,4BACM,QAAC,SAAD;AACE,MAAA,EAAE,EAAC,mBADL;AAEE,MAAA,KAAK,EAAC,mBAFR;AAGE,MAAA,KAAK,EAAED,MAAM,CAACE,SAHhB;AAIE,MAAA,MAAM,EAAC,QAJT;AAKE,MAAA,eAAe,EAAE;AACfC,QAAAA,MAAM,EAAE;AADO,OALnB;AAQE,MAAA,IAAI,EAAC,OARP;AASE,MAAA,OAAO,EAAC,QATV;AAUE,MAAA,UAAU,EAAGhB,CAAD,IAAO;AAAC,YAAIA,CAAC,CAACiB,IAAF,KAAW,OAAf,EAAwBlB,iBAAiB,CAACC,CAAD,CAAjB;AAAqB,OAVnE;AAWE,MAAA,QAAQ,EAAEO,YAXZ;AAYE,MAAA,KAAK,EAAEV,KAAK,CAACQ,KAAN,CAAYA,KAAZ,CAAkBC;AAZ3B;AAAA;AAAA;AAAA;AAAA,YADN,eAeM,QAAC,MAAD;AACE,MAAA,KAAK,EAAEO,MAAM,CAACK,MADhB;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,OAAO,EAAEnB,iBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAxCD;;AA0CA,IAAIc,MAAM,GAAG;AACTC,EAAAA,MAAM,EAAE;AACJK,IAAAA,QAAQ,EAAE,OADN;AAEJC,IAAAA,MAAM,EAAE,CAFJ;AAGJC,IAAAA,KAAK,EAAE,MAHH;AAIJC,IAAAA,eAAe,EAAE3B,MAAM,CAAC4B,UAJpB;AAKJC,IAAAA,OAAO,EAAE,MALL;AAMJC,IAAAA,cAAc,EAAE;AANZ,GADC;AASTP,EAAAA,MAAM,EAAE;AACJQ,IAAAA,MAAM,EAAE;AADJ,GATC;AAYTX,EAAAA,SAAS,EAAE;AACPM,IAAAA,KAAK,EAAE,KADA;AAEPK,IAAAA,MAAM,EAAE;AAFD;AAZF,CAAb;AAkBA,eAAe9B,WAAf","sourcesContent":["import { Button, TextField } from \"@material-ui/core\"\r\nimport React from \"react\"\r\nimport { ToastProvider } from \"react-toast-notifications\"\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nimport colors from \"./colors\"\r\n\r\nvar TokenFooter = (props) => {\r\n    const { addToast } = useToasts()\r\n\r\n    const handleTokenSubmit = (e) => {\r\n        addToast(\"Zoom token uppdaterad\", {\r\n            appearance: 'success',\r\n            autoDismiss: true,\r\n        })\r\n        console.log(props.state.state.token)\r\n        //global.socket.emit('setToken', )\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        props.state.setState({ ...props.state.state, [event.target.name]: event.target.value });\r\n    };    \r\n\r\n    return (\r\n        <div style={styles.footer}>\r\n              <TextField\r\n                id=\"filled-full-width\"\r\n                label=\"Zoom CC api token\"\r\n                style={styles.textField}\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                name=\"token\"\r\n                variant=\"filled\"\r\n                onKeyPress={(e) => {if (e.code === 'Enter') handleTokenSubmit(e)}}\r\n                onChange={handleChange}\r\n                value={props.state.state.token}\r\n              />\r\n              <Button\r\n                style={styles.button}\r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                onClick={handleTokenSubmit}\r\n              >Uppdatera</Button>\r\n          </div>\r\n    )\r\n}\r\n\r\nvar styles = {\r\n    footer: {\r\n        position: \"fixed\",\r\n        bottom: 0,\r\n        width: \"100%\",\r\n        backgroundColor: colors.tartOrange,\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    },\r\n    button: {\r\n        margin: 10\r\n    },\r\n    textField: {\r\n        width: \"80%\",\r\n        margin: 8,\r\n    }\r\n}\r\n\r\nexport default TokenFooter"]},"metadata":{},"sourceType":"module"}