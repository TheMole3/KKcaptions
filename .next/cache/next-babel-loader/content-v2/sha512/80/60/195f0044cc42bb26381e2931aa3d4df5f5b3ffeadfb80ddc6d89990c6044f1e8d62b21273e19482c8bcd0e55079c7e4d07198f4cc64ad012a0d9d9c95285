{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"C:/Users/hugom/OneDrive/Dokument/GitHub/KKcaptions2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport $ from 'jquery';\nimport colors from \"./colors\";\n\nvar EditSong = function EditSong(props) {\n  function applyHighlights(text) {\n    text = text.replace(/\\n$/g, '\\n\\n').replace(/^(?![\\n*]).*/gm, '<mark style=\"color: transparent; background-color: #e5b1b1\"><span style=\"width:2%; display:inline-block\"></span></mark>').replace(/^[*].*/gm, '<span style=\"width:3%; display:inline-block\"></span><mark style=\"border-radius: 3px;color: transparent;background-color: #b1d5e5\">$&</mark>');\n    return text;\n  }\n\n  var string = \"\";\n  var songList = props.state.state.songList;\n  Object.keys(songList).forEach(function (song, songIndex) {\n    string += \"* \".concat(song, \"\\n\");\n    songList[song].forEach(function (text, i) {\n      if (songList[song].length - 1 == i && Object.keys(songList).length - 1 == songIndex) return string += text + \"\";\n      string += text + \"\\n\\n\";\n    });\n  });\n\n  var _useState = useState(string),\n      text = _useState[0],\n      setText = _useState[1];\n\n  useEffect(function () {\n    $('.hilights').html(applyHighlights(text));\n  });\n\n  function handleInput(event) {\n    setText(event.target.value);\n    var text = event.target.value;\n    var highlightedText = applyHighlights(text);\n    $('.hilights').html(highlightedText);\n    var arr = {};\n    text.split(/^[*].*/gm).filter(function (x) {\n      return x.replace(/\\s/g, \"\");\n    }).forEach(function (song, i) {\n      arr[text.match(/^[*].*/gm)[i].replace(\"*\", \"\").trim()] = song.split(/^[\\n\\n]/gm).map(function (x) {\n        return x.trim();\n      }).filter(function (x) {\n        return x;\n      });\n    });\n    props.state.setState(_objectSpread(_objectSpread({}, props.state), {}, {\n      songList: arr\n    }));\n\n    if (true) {\n      // We are running on client\n      localStorage.setItem('song', JSON.stringify(arr));\n    }\n  }\n\n  function handleScroll() {\n    var scrollTop = $('.textarea').scrollTop();\n    $('.backdrop').scrollTop(scrollTop);\n    var scrollLeft = $('.textarea').scrollLeft();\n    $('.backdrop').scrollLeft(scrollLeft);\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"container\",\n    style: {\n      overflow: \"none\"\n    },\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      style: _objectSpread(_objectSpread({}, styles.textarea), {}, {\n        pointerEvents: \"none\",\n        backgroundColor: colors.lavenderWeb,\n        color: \"transparent\",\n        left: 0,\n        width: \"100%\"\n      }),\n      className: \"backdrop\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          whiteSpace: \"pre-wrap\",\n          wordWrap: \"break-word\"\n        },\n        className: \"hilights\"\n      })\n    }), /*#__PURE__*/_jsx(\"textarea\", {\n      className: \"textarea\",\n      style: styles.textarea,\n      onInput: handleInput,\n      onScroll: handleScroll,\n      value: text\n    })]\n  });\n};\n\nvar styles = {\n  textarea: {\n    position: \"absolute\",\n    zIndex: 1,\n    overflow: \"auto\",\n    backgroundColor: \"transparent\",\n    width: \"97%\",\n    height: \"94%\",\n    resize: \"none\",\n    font: \"10pt 'Open Sans'\",\n    letterSpacing: \"1px\",\n    padding: 0,\n    left: \"3%\",\n    border: \"none\",\n    outline: \"none\"\n  }\n};\nexport default EditSong;","map":null,"metadata":{},"sourceType":"module"}