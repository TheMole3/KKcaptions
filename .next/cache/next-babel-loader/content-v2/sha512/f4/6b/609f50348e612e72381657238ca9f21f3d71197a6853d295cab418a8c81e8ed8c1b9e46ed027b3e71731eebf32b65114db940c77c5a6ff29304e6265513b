{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"C:/Users/hugom/OneDrive/Dokument/GitHub/KKcaptions2/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:/Users/hugom/OneDrive/Dokument/GitHub/KKcaptions2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hugom\\\\OneDrive\\\\Dokument\\\\GitHub\\\\KKcaptions2\\\\public\\\\components\\\\SongList.tsx\",\n    _this2 = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport colors from \"./colors.tsx\";\n/* TextRow() A row of text\r\n    props {\r\n        text: String\r\n        state: {\r\n            ...props\r\n            setState\r\n        }\r\n    }\r\n*/\n\nfunction TextRow(props) {\n  var _this = this;\n\n  var state = props.state;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    style: _objectSpread(_objectSpread({}, styles.textRow), props.text == state.state.text ? {\n      border: \"3px solid rgb(240, 84, 79)\",\n      padding: styles.textRow.padding - 3\n    } : {}),\n    onClick: function onClick() {\n      console.log(state.state);\n      var textState = props.text == props.state.state.text ? {\n        text: \"-\"\n      } : {\n        text: props.text\n      }; // If text is selected unselect else select\n\n      state.setState.apply(state, _toConsumableArray(state.state).concat([textState]));\n      global.socket.emit('setText', textState);\n      console.log(state);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      style: Object.assign(styles.noSelect),\n      children: [props.text.split(\"\\n\").map(function (i, key) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: i\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 107\n        }, _this);\n      }), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n/* SongList() Create a ul within a div\r\n    props {\r\n        state: {\r\n            ...props\r\n            setState\r\n        }\r\n    }\r\n*/\n\n\n_c = TextRow;\n\nvar SongList = function SongList(props) {\n  var state = props.state;\n  console.log(state);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextRow, {\n      text: state.state.songList[\"Ära\"][0],\n      state: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, _this2), /*#__PURE__*/_jsxDEV(TextRow, {\n      text: state.state.songList[\"Ära\"][1],\n      state: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, _this2)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, _this2);\n};\n\n_c2 = SongList;\nvar styles = {\n  noSelect: {\n    \"WebkitTouchCallout\": \"none\",\n    \"WebkitUserSelect\": \"none\",\n    \"KhtmlUserSelect\": \"none\",\n    \"MozUserSelect\": \"none\",\n    \"MsUserSelect\": \"none\",\n    \"UserSelect\": \"none\"\n  },\n  textRow: {\n    listStyleType: \"none\",\n    margin: 10,\n    fontSize: \"15pt\",\n    cursor: \"pointer\",\n    padding: 10,\n    backgroundColor: colors.lavenderWeb,\n    borderRadius: 5\n  }\n};\nexport default SongList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextRow\");\n$RefreshReg$(_c2, \"SongList\");","map":{"version":3,"sources":["C:/Users/hugom/OneDrive/Dokument/GitHub/KKcaptions2/public/components/SongList.tsx"],"names":["colors","TextRow","props","state","styles","textRow","text","border","padding","console","log","textState","setState","global","socket","emit","Object","assign","noSelect","split","map","i","key","SongList","songList","listStyleType","margin","fontSize","cursor","backgroundColor","lavenderWeb","borderRadius"],"mappings":"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","sourcesContent":["import { Socket } from 'socket.io-client';\r\nimport colors from '/public/components/colors.tsx'\r\n\r\n/* TextRow() A row of text\r\n    props {\r\n        text: String\r\n        state: {\r\n            ...props\r\n            setState\r\n        }\r\n    }\r\n*/\r\nfunction TextRow(props) {\r\n    var state = props.state;\r\n    return (\r\n        <li \r\n            style={{...styles.textRow, ...props.text==state.state.text ? {border: `3px solid rgb(240, 84, 79)`, padding: styles.textRow.padding-3}:{}}}\r\n            onClick={() => {\r\n                console.log(state.state)\r\n\r\n                var textState = props.text==props.state.state.text?{text: \"-\"}:{text: props.text} // If text is selected unselect else select\r\n                state.setState(...(state.state), textState);\r\n                global.socket.emit('setText', textState)\r\n\r\n                console.log(state)\r\n            }}\r\n        >\r\n            <span style={Object.assign(styles.noSelect)}>{props.text.split(\"\\n\").map((i, key) => { return <div key={key}>{i}</div>; })} </span>\r\n        </li>\r\n    )\r\n}\r\n\r\n/* SongList() Create a ul within a div\r\n    props {\r\n        state: {\r\n            ...props\r\n            setState\r\n        }\r\n    }\r\n*/\r\nconst SongList = (props) => {\r\n    var state = props.state;\r\n    console.log(state)\r\n\r\n    return (\r\n        <div>\r\n            <TextRow text={state.state.songList[\"Ära\"][0]} state={state}/>\r\n            <TextRow text={state.state.songList[\"Ära\"][1]} state={state}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n  \r\nvar styles = {\r\n    noSelect: {\r\n        \"WebkitTouchCallout\": \"none\",\r\n        \"WebkitUserSelect\": \"none\",\r\n        \"KhtmlUserSelect\": \"none\",\r\n        \"MozUserSelect\": \"none\",\r\n        \"MsUserSelect\": \"none\",\r\n        \"UserSelect\": \"none\"\r\n    },\r\n    textRow: {\r\n        listStyleType: \"none\",\r\n        margin: 10,\r\n        fontSize: \"15pt\",\r\n        cursor: \"pointer\",\r\n        padding: 10,\r\n        backgroundColor: colors.lavenderWeb,\r\n        borderRadius: 5,\r\n    },\r\n}\r\n\r\nexport default SongList"]},"metadata":{},"sourceType":"module"}