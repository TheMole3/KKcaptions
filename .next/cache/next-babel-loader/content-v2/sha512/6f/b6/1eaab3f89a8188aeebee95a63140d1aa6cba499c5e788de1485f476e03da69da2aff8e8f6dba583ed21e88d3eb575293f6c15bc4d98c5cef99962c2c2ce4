{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\hugom\\\\OneDrive\\\\Dokument\\\\GitHub\\\\KKcaptions2\\\\public\\\\components\\\\SongList.tsx\";\n\n/* TextRow() A row of text\r\n    props {\r\n        text: String\r\n        state: {\r\n            ...props\r\n            setState\r\n        }\r\n    }\r\n*/\nfunction TextRow(props) {\n  var state = props.state;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      style: Object.assign(styles.noSelect, styles.textRow),\n      children: [props.text.split(\"\\n\").map((i, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: i\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 123\n        }, this);\n      }), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n/* SongList() Create a ul within a div\r\n    props {\r\n        state: {\r\n            ...props\r\n            setState\r\n        }\r\n    }\r\n*/\n\n\nconst SongList = props => {\n  var state = props.state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TextRow, {\n      text: state.songList[\"Ära\"][0],\n      state: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\nvar colors = {\n  richBlackFogra: \"#071013\",\n  lavenderWeb: \"#eeeeff\",\n  sonicSilver: \"#707078\",\n  etonBlue: \"#79c99e\",\n  tartOrange: \"#f0544f\"\n};\nvar styles = {\n  noSelect: {\n    \"WebkitTouchCallout\": \"none\",\n    \"WebkitUserSelect\": \"none\",\n    \"KhtmlUserSelect\": \"none\",\n    \"MozUserSelect\": \"none\",\n    \"MsUserSelect\": \"none\",\n    \"UserSelect\": \"none\"\n  },\n  textRow: {\n    listStyleType: \"none\",\n    margin: 10,\n    fontSize: \"15pt\",\n    cursor: \"pointer\",\n    padding: 10,\n    backgroundColor: colors.lavenderWeb,\n    borderRadius: 5\n  }\n};\nexport default SongList;","map":{"version":3,"sources":["C:/Users/hugom/OneDrive/Dokument/GitHub/KKcaptions2/public/components/SongList.tsx"],"names":["TextRow","props","state","Object","assign","styles","noSelect","textRow","text","split","map","i","key","SongList","songList","colors","richBlackFogra","lavenderWeb","sonicSilver","etonBlue","tartOrange","listStyleType","margin","fontSize","cursor","padding","backgroundColor","borderRadius"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,MAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;AACA,sBACI;AAAA,2BACI;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,MAAP,CAAcC,MAAM,CAACC,QAArB,EAA+BD,MAAM,CAACE,OAAtC,CAAb;AAAA,iBAA8DN,KAAK,CAACO,IAAN,CAAWC,KAAX,CAAiB,IAAjB,EAAuBC,GAAvB,CAA2B,CAACC,CAAD,EAAIC,GAAJ,KAAY;AAAE,4BAAO;AAAA,oBAAgBD;AAAhB,WAAUC,GAAV;AAAA;AAAA;AAAA;AAAA,gBAAP;AAAkC,OAA3E,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,QAAQ,GAAIZ,KAAD,IAAW;AACxB,MAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;AAEA,sBACI;AAAA,2BACI,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEA,KAAK,CAACY,QAAN,CAAe,KAAf,EAAsB,CAAtB,CAAf;AAAyC,MAAA,KAAK,EAAEZ;AAAhD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CARD;;AAUA,IAAIa,MAAM,GAAG;AACTC,EAAAA,cAAc,EAAE,SADP;AAETC,EAAAA,WAAW,EAAE,SAFJ;AAGTC,EAAAA,WAAW,EAAE,SAHJ;AAITC,EAAAA,QAAQ,EAAE,SAJD;AAKTC,EAAAA,UAAU,EAAE;AALH,CAAb;AASA,IAAIf,MAAM,GAAG;AACTC,EAAAA,QAAQ,EAAE;AACN,0BAAsB,MADhB;AAEN,wBAAoB,MAFd;AAGN,uBAAmB,MAHb;AAIN,qBAAiB,MAJX;AAKN,oBAAgB,MALV;AAMN,kBAAc;AANR,GADD;AASTC,EAAAA,OAAO,EAAE;AACLc,IAAAA,aAAa,EAAE,MADV;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,QAAQ,EAAE,MAHL;AAILC,IAAAA,MAAM,EAAE,SAJH;AAKLC,IAAAA,OAAO,EAAE,EALJ;AAMLC,IAAAA,eAAe,EAAEX,MAAM,CAACE,WANnB;AAOLU,IAAAA,YAAY,EAAE;AAPT;AATA,CAAb;AAoBA,eAAed,QAAf","sourcesContent":["/* TextRow() A row of text\r\n    props {\r\n        text: String\r\n        state: {\r\n            ...props\r\n            setState\r\n        }\r\n    }\r\n*/\r\nfunction TextRow(props) {\r\n    var state = props.state;\r\n    return (\r\n        <li>\r\n            <span style={Object.assign(styles.noSelect, styles.textRow)}>{props.text.split(\"\\n\").map((i, key) => { return <div key={key}>{i}</div>; })} </span>\r\n        </li>\r\n    )\r\n}\r\n\r\n/* SongList() Create a ul within a div\r\n    props {\r\n        state: {\r\n            ...props\r\n            setState\r\n        }\r\n    }\r\n*/\r\nconst SongList = (props) => {\r\n    var state = props.state;\r\n\r\n    return (\r\n        <div>\r\n            <TextRow text={state.songList[\"Ära\"][0]} state={state}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nvar colors = {\r\n    richBlackFogra: \"#071013\",\r\n    lavenderWeb: \"#eeeeff\",\r\n    sonicSilver: \"#707078\",\r\n    etonBlue: \"#79c99e\",\r\n    tartOrange: \"#f0544f\",\r\n}\r\n  \r\n\r\nvar styles = {\r\n    noSelect: {\r\n        \"WebkitTouchCallout\": \"none\",\r\n        \"WebkitUserSelect\": \"none\",\r\n        \"KhtmlUserSelect\": \"none\",\r\n        \"MozUserSelect\": \"none\",\r\n        \"MsUserSelect\": \"none\",\r\n        \"UserSelect\": \"none\"\r\n    },\r\n    textRow: {\r\n        listStyleType: \"none\",\r\n        margin: 10,\r\n        fontSize: \"15pt\",\r\n        cursor: \"pointer\",\r\n        padding: 10,\r\n        backgroundColor: colors.lavenderWeb,\r\n        borderRadius: 5,\r\n    }\r\n}\r\n\r\nexport default SongList"]},"metadata":{},"sourceType":"module"}